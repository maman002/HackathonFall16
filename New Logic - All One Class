import java.util.ArrayList;
import java.io.File;
import java.util.Scanner;

public class UserEvents { public void run() { 

  //array lists for users
  public ArrayList<String> userName = new ArrayList<String>(5);
  public ArrayList<String> userPass = new ArrayList<String>(5);
	
  //array list for invitees
  public ArrayList<String> friendList = new ArrayList<String>(5);
	
  //array lists for events and event attendees
  public ArrayList<String> eventUsernames = new ArrayList<String>(5);
  public ArrayList<String> userRReventList = new ArrayList<String>(5);
  public ArrayList<String> userAcceptEventList = new ArrayList<String>(5);
	
  //variables to store username and password from input
  public String usrnm;
  public String pswd;

  //variables to store event occasion, user details, and overall event info
  public String eventOccasion;
  public String eventDetail;
  public String event = eventOccasion + " " + eventDetail;

  public 	Scanner keyboard = new Scanner(System.in); 

  //methods: getUsername, getPassword, loginExistig, registerNew
  //methods: newEvent, inviteToEvent, getMyEvents

  //Retrieve info from action listenser
  //for username 
  public String getUsername()
  {
    String usrnm = keyboard.next(); 
  }
	
  //Retrieve info from action listenser
  //for username 		
  public String getPassword()
  {
    String pswd = keyboard.next(); 
  }
	
  //if register button pressed
  public void logMeIn(usrnm,pswd) 
  {
    boolean inUse = userName.contains(usrnm);
  
    //Check to see if the username is already being used
    if (inUse == true)
    {
      System.out.println("Name is already in use.");
      //clear button
    } 
    //If not in use, add the usernames and passwords to storage
    else
    {
      userName.add(usrnm);
      userPass.add(pswd);
      System.out.println("Welcome");
      //Move to next screen
    }
  }

//if login button pressed
public void registerNew(usrnm,pswd) 
{
int i = 0; 
int userIndex = -1;
String pswdIndex = null;
while (i == 0) 
{ 
int userIndex = userName.indexOf(usrnm);
String pswdIndex = userPass.get(userIndex);
	
while (input.hasNextLine()) 
{ 
if (pswd == pswdIndex) 
{ 
System.out.print("Welcome"); 
i = 1; 
} 
		
if(i==0) 
{
System.out.println("Password or Username is incorrect"); 
} 
			
}

}
}

//Take info from "Invite" box 	
//Add events to those users' "My Events" page under "Response Required"
public void inviteFriends(event)
{
while ( input )
{
String friend = keyboard.next();
boolean activeUser = userName(friend);

if (activeUser == true)
{
//add the user to the event's attendy list
eventUsernames.add(friend);
				
//add the event to the user's Response Required list
userRREventList.add(event);
}
}
}

//If Accept button pressed
public void acceptEvent(event)
{	
//add the event to that user's accepted events
userAcceptEventList.add(event);

//remove the event from the Response Required list
int removeIndex = userRReventList.indexOf(event);
userRReventList.remove(removeIndex);
}

//Print a user's Event List
public void myEventList(usrnm)
{
System.out.println("Response Required");
for (String str : userRReventList) 
{
System.out.println(str);
}

System.out.println("Accepted Events");
for (String str : userAcceptEventList) 
{
System.out.println(str);
}
}

}
